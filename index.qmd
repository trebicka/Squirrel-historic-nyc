```{r}
#| echo: false
#| warning: false
#| message: false

library(leaflet)
library(sf)
library(leaflet.extras)
library(htmltools)

# IMPORTANT: Use these exact paths for GitHub Pages
squirrel_path <- "https://trebicka.github.io/Squirrel-historic-nyc/squirrel.geojson"
historic_path <- "https://trebicka.github.io/Squirrel-historic-nyc/historic.geojson"

# Load files with error handling
tryCatch({
  historic_districts <- st_read(historic_path)
  squirrels <- st_read(squirrel_path)
}, error = function(e) {
  stop("Failed to load GeoJSON files. Please verify: \n",
       "1. Files exist at: \n",
       "- ", squirrel_path, "\n",
       "- ", historic_path, "\n",
       "2. Files are publicly accessible")
})

# Load the GeoJSON files
historic_districts <- st_read(historic_path)
squirrels <- st_read(squirrel_path)

# Check if files loaded correctly
if(nrow(historic_districts) == 0) stop("Historic districts file failed to load or is empty")
if(nrow(squirrels) == 0) stop("Squirrel file failed to load or is empty")

# Extract coordinates for squirrels upfront to avoid issues in popup
squirrel_coords <- as.data.frame(st_coordinates(squirrels))
squirrels$longitude <- squirrel_coords$X
squirrels$latitude <- squirrel_coords$Y

# For squirrels: create a factor for consistent color mapping
squirrels$primary_fur_color <- factor(squirrels$primary_fur_color, 
                                     levels = c("Gray", "Cinnamon", "Black"))

# Create color palettes
squirrel_palette <- colorFactor(
  palette = c("#808080", "#D2691E", "#000000"),
  domain = squirrels$primary_fur_color
)

district_palette <- colorFactor(
  palette = "Set3",
  domain = historic_districts$area_name
)

# Create the map
m <- leaflet() %>%
  # Add base map layers
  addProviderTiles(providers$CartoDB.Positron, group = "Light") %>%
  addProviderTiles(providers$Esri.WorldImagery, group = "Satellite") %>%
  
  # Add historic districts polygon layer
  addPolygons(
    data = historic_districts,
    fillColor = ~district_palette(area_name),
    fillOpacity = 0.7,
    color = "#444444",
    weight = 1,
    smoothFactor = 0.5,
    group = "Historic Districts",
    popup = ~paste0("<strong>", area_name, "</strong>")
  ) %>%
  
  # Add squirrel point layer (using pre-calculated coordinates)
  addCircleMarkers(
    data = squirrels,
    radius = 5,
    color = ~squirrel_palette(primary_fur_color),
    stroke = FALSE,
    fillOpacity = 0.8,
    group = "Squirrels",
    popup = ~paste0(
      "<strong>Fur Color: </strong>", primary_fur_color, "<br>",
      "<strong>Location: </strong>", round(longitude, 4), ", ", 
      round(latitude, 4)
    )
  ) %>%
  
  # Add layer control
  addLayersControl(
    baseGroups = c("Light", "Satellite"),
    overlayGroups = c("Historic Districts", "Squirrels"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  
  # Add legends
  addLegend(
    position = "bottomright",
    pal = squirrel_palette,
    values = squirrels$primary_fur_color,
    title = "Squirrel Fur Color",
    opacity = 1
  ) %>%
  addControl(
    html = "<div style='background: white; padding: 5px;'><strong>Historic Districts</strong><br>(See popups for names)</div>",
    position = "bottomleft"
  ) %>%
  
  # Add controls
  leaflet.extras::addFullscreenControl() %>%
  leaflet.extras::addSearchOSM() %>%
  leaflet.extras::addResetMapButton() %>%
  
  # Add coordinate display using JavaScript
  htmlwidgets::onRender("
    function(el, x) {
      var map = this;
      var info = L.control({position: 'bottomleft'});
      
      info.onAdd = function(map) {
        this._div = L.DomUtil.create('div', 'info');
        this.update();
        return this._div;
      };
      
      info.update = function(props) {
        this._div.innerHTML = '<b>Mouse coordinates:</b><br>Hover over map';
      };
      
      info.addTo(map);
      
      map.on('mousemove', function(e) {
        info._div.innerHTML = '<b>Mouse coordinates:</b><br>' + 
          'Lat: ' + e.latlng.lat.toFixed(4) + '<br>' + 
          'Lng: ' + e.latlng.lng.toFixed(4);
      });
    }
  ")

# View the map
m

# Save as HTML
# htmlwidgets::saveWidget(m, file = "C:/Users/student/OneDrive - Hunter - CUNY/Documents/map6/nyc_squirrels_historic_districts.html")
```
